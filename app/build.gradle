plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    //id 'com.google.gms.google-services'

}

android {
    namespace APPLICATION_ID
    compileSdk MAX_SDK
    buildToolsVersion TOOLS_VERSION

    signingConfigs{
        config{
            keyAlias 'cajamovilandroid'
            keyPassword 'CajaMovilAndroid2023'
            storeFile file('../app/keystore/cajamovilAndroidBeta.jks')
            storePassword 'CajaMovilAndroid2023'
        }
    }

    defaultConfig {
        project.setProperty("archivesBaseName",ARCHIVE_BASE_NAME)
        applicationId APPLICATION_ID
        minSdk MIN_SDK
        targetSdk MAX_SDK
        versionCode VERSION_CODE
        versionName VERSION_NAME
        signingConfig signingConfigs.config
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        archivesBaseName = "$ARCHIVE_BASE_NAME"+"_"+"$SPRINT_NUMBER"+"_"+"$VERSION_NAME"+"_"+"$VERSION_CODE"+"_"+"$COMPILED_VERSION"
    }

    buildTypes {
        debug{
            applicationIdSuffix ".Desarrollo"
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.config
            applicationIdSuffix ".Produccion"
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        qa{
            applicationIdSuffix ".TestQA"
            debuggable true
            minifyEnabled true
            shrinkResources true
        }
    }

    productFlavors{
        development{
            flavorDimensions "default"
            buildConfigField "boolean", "debuggable", "true"
        }

        production{
            flavorDimensions "default"
            buildConfigField "boolean", "debuggable", "false"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        dataBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include:['*.jar'] )
    //modules
    implementation project(path: ':widget')
    implementation project(path: ':analytic')
    implementation project(path: ':common')
    implementation project(path: ':widget')
    implementation project(path: ':ui')
    implementation project(path: ':domain')

    //androidx core
    implementation "androidx.core:core-ktx:$ANDROIX_CORE"
    //app compat
    implementation "androidx.appcompat:appcompat:$APP_COMPAT"
    //material
    implementation "com.google.android.material:material:$MATERIAL_VERSION"
    //constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$CONSTRAINT_VERSION"
    //kotlin stdlib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
    //dagger hilt
    implementation "com.google.dagger:hilt-android:$HILT_VERSION"
    kapt "com.google.dagger:hilt-compiler:$HILT_VERSION"
    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$NAVIGATION_VERSION"
    implementation "androidx.navigation:navigation-ui-ktx:$NAVIGATION_VERSION"
    //gson
    implementation "com.google.code.gson:gson:$GSON_VERSION"
    //legacy
    implementation "androidx.legacy:legacy-support-v4:$ANDROID_LEGACY"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES_VERSION"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES_VERSION"
    //coroutines for retrofit support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$COROUTINES_ADAPTER"
    //view model and live data
    implementation "androidx.lifecycle:lifecycle-viewmodel:$LIFECYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-livedata:$LIFECYCLE_VERSION"
    //lottie
    implementation "com.airbnb.android:lottie:$LOTTIE_VERSION"
    //firebase
    implementation platform("com.google.firebase:firebase-bom:$FIREBASE_VERSION")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    //shimmer
    implementation "com.facebook.shimmer:shimmer:$SHIMMER_VERSION"
    //glide
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    kapt "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
    //common io
    implementation "commons-io:commons-io:$COMMONIO_VERSION"
    //Timber
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
    //biometric
    implementation "androidx.biometric:biometric:$BIOMETRIC_VERSION"
    //paging
    implementation "androidx.paging:paging-runtime:$PAGING_VERSION"
    //multidex
    implementation "androidx.multidex:multidex:$MULTIDEX_VERSION"
    //viewpager
    implementation "androidx.viewpager:viewpager:$VIEWPAGER_VERSION"
    //maps location
    implementation "com.google.android.gms:play-services-maps:$PLAYSERVICES_VERSION"
    implementation "com.google.android.gms:play-services-location:$LOCATION_VERSION"
    //data store
    implementation "androidx.datastore:datastore-preferences:$DATASTORE_VERSION"
    //hilt navigation
    implementation "androidx.hilt:hilt-navigation-fragment:$HILT_TOOLS"
    //hilt work
    implementation "androidx.hilt:hilt-work:$HILT_TOOLS"
    kapt "androidx.hilt:hilt-compiler:$HILT_TOOLS"
    //work
    implementation "androidx.work:work-runtime-ktx:$WORK_VERSION"
    //bar code
    implementation "com.google.mlkit:barcode-scanning:$BARCODE_VERSION"
    //kotlin reflect
    implementation "org.jetbrains.kotlin:kotlin-reflect:$REFLECT_VERSION"
    //camera
    implementation "androidx.camera:camera-core:${CAMERAX_VERSION}"
    implementation "androidx.camera:camera-camera2:${CAMERAX_VERSION}"
    implementation "androidx.camera:camera-lifecycle:${CAMERAX_VERSION}"
    implementation "androidx.camera:camera-view:${CAMERAX_VERSION}"
    implementation "androidx.camera:camera-extensions:${CAMERAX_VERSION}"
    //adobe ALGUNN DIA


    //testing
    testImplementation "junit:junit:$JUNIT_VERSION"
    androidTestImplementation "androidx.test.ext:junit:$TEST_JUNIT"
    androidTestImplementation "androidx.test.espresso:espresso-core:$ESPRESSO_VERSION"
}